# Generated by Django 2.0.5 on 2018-08-01 16:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dnd.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('recharge', models.CharField(default='', max_length=32)),
                ('type', models.CharField(choices=[('', 'None'), ('AB', 'Aberration'), ('BE', 'Beast'), ('CE', 'Celestial'), ('CO', 'Construct'), ('DR', 'Dragon'), ('EL', 'Elemental'), ('FE', 'Fey'), ('FI', 'Fiend'), ('GI', 'Giant'), ('HU', 'Humanoid'), ('MO', 'Monstrosity'), ('OO', 'Ooze'), ('PL', 'Plant'), ('UN', 'Undead')], default='', max_length=2)),
                ('to_hit', models.IntegerField(default=0)),
                ('reach', models.PositiveSmallIntegerField(blank=True, default=5, null=True)),
                ('range', models.CharField(blank=True, default='', max_length=7)),
                ('targets', models.PositiveSmallIntegerField(default=1)),
                ('damage', models.CharField(default='1d6', max_length=16)),
                ('damage_type', models.CharField(choices=[('', 'None'), ('AC', 'Acid'), ('BL', 'Bludgeoning'), ('CO', 'Cold'), ('FI', 'Fire'), ('FO', 'Force'), ('LI', 'Lightning'), ('NE', 'Necrotic'), ('PI', 'Piercing'), ('PO', 'Poison'), ('PS', 'Psychic'), ('RA', 'Radiant'), ('SL', 'Slashing'), ('TH', 'Thunder')], default='SL', max_length=2)),
                ('crit', models.CharField(blank=True, default='', max_length=16)),
                ('damage2', models.CharField(blank=True, default='', max_length=16)),
                ('damage2_type', models.CharField(choices=[('', 'None'), ('AC', 'Acid'), ('BL', 'Bludgeoning'), ('CO', 'Cold'), ('FI', 'Fire'), ('FO', 'Force'), ('LI', 'Lightning'), ('NE', 'Necrotic'), ('PI', 'Piercing'), ('PO', 'Poison'), ('PS', 'Psychic'), ('RA', 'Radiant'), ('SL', 'Slashing'), ('TH', 'Thunder')], default='SL', max_length=2)),
                ('crit2', models.CharField(blank=True, default='', max_length=16)),
                ('save', models.CharField(choices=[('', 'None'), ('ST', 'Strength'), ('DE', 'Dexterity'), ('CO', 'Constitution'), ('IN', 'Intelligence'), ('WI', 'Wisdom'), ('CH', 'Charisma')], default='', max_length=2)),
                ('save_dc', models.PositiveSmallIntegerField(blank=True, default='')),
                ('save_success', models.CharField(blank=True, default='', max_length=128)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('amount', models.PositiveSmallIntegerField(default=1)),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cp', models.PositiveSmallIntegerField(default=0)),
                ('sp', models.PositiveSmallIntegerField(default=0)),
                ('ep', models.PositiveSmallIntegerField(default=0)),
                ('gp', models.PositiveSmallIntegerField(default=0)),
                ('pp', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('size', models.CharField(choices=[('T', 'Tiny'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('H', 'Huge'), ('G', 'Gargantuan')], default='M', max_length=1)),
                ('type', models.CharField(choices=[('', 'None'), ('AB', 'Aberration'), ('BE', 'Beast'), ('CE', 'Celestial'), ('CO', 'Construct'), ('DR', 'Dragon'), ('EL', 'Elemental'), ('FE', 'Fey'), ('FI', 'Fiend'), ('GI', 'Giant'), ('HU', 'Humanoid'), ('MO', 'Monstrosity'), ('OO', 'Ooze'), ('PL', 'Plant'), ('UN', 'Undead')], default='HU', max_length=2)),
                ('alignment', models.CharField(choices=[('UN', 'Unaligned'), ('LG', 'Lawful Good'), ('NG', 'Neutral Good'), ('CG', 'Chaotic Good'), ('LN', 'Lawful Neutral'), ('TN', 'True Neutral'), ('CN', 'Chaotic Neutral'), ('LE', 'Lawful Evil'), ('NE', 'Neutral Evil'), ('CE', 'Chaotic Evil'), ('FI', 'Fire'), ('EA', 'Earth'), ('AI', 'Air'), ('WA', 'Water'), ('VO', 'Void')], default='UN', max_length=2)),
                ('ac', models.PositiveSmallIntegerField(default=10)),
                ('ac_type', models.CharField(blank=True, default='', max_length=32)),
                ('initiative', models.SmallIntegerField(default=0)),
                ('hp', models.PositiveSmallIntegerField(default=0)),
                ('strength', models.PositiveSmallIntegerField(default=10)),
                ('dexterity', models.PositiveSmallIntegerField(default=10)),
                ('constitution', models.PositiveSmallIntegerField(default=10)),
                ('intelligence', models.PositiveSmallIntegerField(default=10)),
                ('wisdom', models.PositiveSmallIntegerField(default=10)),
                ('charisma', models.PositiveSmallIntegerField(default=10)),
                ('strength_save', models.BooleanField(default=False)),
                ('dexterity_save', models.BooleanField(default=False)),
                ('constitution_save', models.BooleanField(default=False)),
                ('intelligence_save', models.BooleanField(default=False)),
                ('wisdom_save', models.BooleanField(default=False)),
                ('charisma_save', models.BooleanField(default=False)),
                ('hp_dice', models.CharField(max_length=16)),
                ('challenge_rating', models.CharField(choices=[('0', '0'), ('1/8', '1/8'), ('1/4', '1/4'), ('1/2', '1/2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30')], default='0', max_length=3)),
                ('damage_vulnerabilities', models.CharField(blank=True, default='', max_length=128)),
                ('damage_resistances', models.CharField(blank=True, default='', max_length=128)),
                ('damage_immunities', models.CharField(blank=True, default='', max_length=128)),
                ('condition_immunities', models.CharField(blank=True, default='', max_length=128)),
                ('legendary_actions_amount', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('actions', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Action')),
                ('legendary_actions', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='legendary_actions', to='dnd.Action')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherProficiency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('L', 'Language'), ('A', 'Armor'), ('W', 'Weapon'), ('O', 'Other')], default='L', max_length=1)),
                ('proficiency', models.CharField(default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerCharacter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('size', models.CharField(choices=[('T', 'Tiny'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('H', 'Huge'), ('G', 'Gargantuan')], default='M', max_length=1)),
                ('type', models.CharField(choices=[('', 'None'), ('AB', 'Aberration'), ('BE', 'Beast'), ('CE', 'Celestial'), ('CO', 'Construct'), ('DR', 'Dragon'), ('EL', 'Elemental'), ('FE', 'Fey'), ('FI', 'Fiend'), ('GI', 'Giant'), ('HU', 'Humanoid'), ('MO', 'Monstrosity'), ('OO', 'Ooze'), ('PL', 'Plant'), ('UN', 'Undead')], default='HU', max_length=2)),
                ('alignment', models.CharField(choices=[('UN', 'Unaligned'), ('LG', 'Lawful Good'), ('NG', 'Neutral Good'), ('CG', 'Chaotic Good'), ('LN', 'Lawful Neutral'), ('TN', 'True Neutral'), ('CN', 'Chaotic Neutral'), ('LE', 'Lawful Evil'), ('NE', 'Neutral Evil'), ('CE', 'Chaotic Evil'), ('FI', 'Fire'), ('EA', 'Earth'), ('AI', 'Air'), ('WA', 'Water'), ('VO', 'Void')], default='UN', max_length=2)),
                ('ac', models.PositiveSmallIntegerField(default=10)),
                ('ac_type', models.CharField(blank=True, default='', max_length=32)),
                ('initiative', models.SmallIntegerField(default=0)),
                ('hp', models.PositiveSmallIntegerField(default=0)),
                ('strength', models.PositiveSmallIntegerField(default=10)),
                ('dexterity', models.PositiveSmallIntegerField(default=10)),
                ('constitution', models.PositiveSmallIntegerField(default=10)),
                ('intelligence', models.PositiveSmallIntegerField(default=10)),
                ('wisdom', models.PositiveSmallIntegerField(default=10)),
                ('charisma', models.PositiveSmallIntegerField(default=10)),
                ('strength_save', models.BooleanField(default=False)),
                ('dexterity_save', models.BooleanField(default=False)),
                ('constitution_save', models.BooleanField(default=False)),
                ('intelligence_save', models.BooleanField(default=False)),
                ('wisdom_save', models.BooleanField(default=False)),
                ('charisma_save', models.BooleanField(default=False)),
                ('current_hp', models.PositiveSmallIntegerField(default=0)),
                ('temp_hp', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d6', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d8', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d10', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d12', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d6_left', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d8_left', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d10_left', models.PositiveSmallIntegerField(default=0)),
                ('hit_dice_d12_left', models.PositiveSmallIntegerField(default=0)),
                ('death_save_success_1', models.BooleanField(default=False)),
                ('death_save_success_2', models.BooleanField(default=False)),
                ('death_save_success_3', models.BooleanField(default=False)),
                ('death_save_failure_1', models.BooleanField(default=False)),
                ('death_save_failure_2', models.BooleanField(default=False)),
                ('death_save_failure_3', models.BooleanField(default=False)),
                ('class_and_level', models.CharField(default='', max_length=128)),
                ('level', models.PositiveSmallIntegerField(default=1)),
                ('experience', models.PositiveSmallIntegerField(default=0)),
                ('inspiration', models.BooleanField(default=False)),
                ('spellcaster', models.BooleanField(default=False)),
                ('spellcasting_ability', models.CharField(choices=[('', 'None'), ('ST', 'Strength'), ('DE', 'Dexterity'), ('CO', 'Constitution'), ('IN', 'Intelligence'), ('WI', 'Wisdom'), ('CH', 'Charisma')], default='', max_length=2)),
                ('spell_save_dc', models.PositiveSmallIntegerField(default=8)),
                ('spell_attack_bonus', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_1', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_1_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_2', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_2_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_3', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_3_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_4', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_4_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_5', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_5_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_6', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_6_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_7', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_7_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_8', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_8_left', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_9', models.PositiveSmallIntegerField(default=0)),
                ('spell_slot_9_left', models.PositiveSmallIntegerField(default=0)),
                ('background', models.CharField(blank=True, default='', max_length=32)),
                ('personality_trait', models.TextField(blank=True, default='')),
                ('ideals', models.TextField(blank=True, default='')),
                ('bonds', models.TextField(blank=True, default='')),
                ('flaws', models.TextField(blank=True, default='')),
                ('race', models.CharField(blank=True, default='', max_length=32)),
                ('age', models.CharField(blank=True, default='', max_length=32)),
                ('height', models.CharField(blank=True, default='', max_length=32)),
                ('weight', models.CharField(blank=True, default='', max_length=32)),
                ('eyes', models.CharField(blank=True, default='', max_length=32)),
                ('skin', models.CharField(blank=True, default='', max_length=32)),
                ('hair', models.CharField(blank=True, default='', max_length=32)),
                ('character_appearance', models.TextField(blank=True, default='')),
                ('allies_and_organizations', models.TextField(blank=True, default='')),
                ('backstory', models.TextField(blank=True, default='')),
                ('additional_features_and_traits', models.TextField(blank=True, default='')),
                ('treasure', models.TextField(blank=True, default='')),
                ('actions', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Action')),
                ('inventory', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dnd.Item')),
                ('money', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='money', to='dnd.Money')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proficiencies', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='proficiencies', to='dnd.OtherProficiency')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('total', models.PositiveSmallIntegerField(default=1)),
                ('left', models.PositiveSmallIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Senses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passive_perception', models.PositiveSmallIntegerField(default=10)),
                ('blindsight', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('darkvision', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('tremorsense', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('truesight', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acrobatics', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('animal_handling', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('arcana', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('athletics', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('deception', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('history', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('insight', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('intimidation', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('investigation', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('medicine', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('nature', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('performance', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('perception', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('persuasion', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('religion', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('sleight_of_hand', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('stealth', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
                ('survival', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Speed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.PositiveSmallIntegerField(default=30)),
                ('speed_burrow', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('speed_climb', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('speed_fly', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('speed_swim', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('speed_hover', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('level', dnd.models.PositiveSmallIntegerRangeField(choices=[(0, 'Cantrip'), (1, '1'), (1, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=0)),
                ('school', models.CharField(choices=[('AB', 'Abjuration'), ('CO', 'Conjuration'), ('DI', 'Divination'), ('EN', 'Enchantment'), ('EV', 'Evocation'), ('IL', 'Illusion'), ('NE', 'Necromancy'), ('TR', 'Transmutation')], default='AB', max_length=2)),
                ('casting_time', models.CharField(default='1 Action', max_length=16)),
                ('range', models.CharField(default='30 feet', max_length=32)),
                ('verbal', models.BooleanField(default=False)),
                ('somatic', models.BooleanField(default=False)),
                ('material', models.BooleanField(default=False)),
                ('material_material', models.CharField(blank=True, default='', max_length=32)),
                ('duration', models.CharField(default='Instantaneous', max_length=32)),
                ('description', models.TextField(blank=True, default='')),
                ('higher_level_description', models.TextField(blank=True, default='')),
                ('attack_type', models.CharField(choices=[('', 'None'), ('M', 'Melee'), ('R', 'Ranged')], default='', max_length=1)),
                ('damage', models.CharField(default='1d6', max_length=64)),
                ('damage_type', models.CharField(choices=[('', 'None'), ('AC', 'Acid'), ('BL', 'Bludgeoning'), ('CO', 'Cold'), ('FI', 'Fire'), ('FO', 'Force'), ('LI', 'Lightning'), ('NE', 'Necrotic'), ('PI', 'Piercing'), ('PO', 'Poison'), ('PS', 'Psychic'), ('RA', 'Radiant'), ('SL', 'Slashing'), ('TH', 'Thunder')], default='', max_length=2)),
                ('damage_type_other', models.CharField(blank=True, default='', max_length=128)),
                ('higher_level_dice', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('damage2', models.CharField(blank=True, default='', max_length=64)),
                ('damage2_type', models.CharField(choices=[('', 'None'), ('AC', 'Acid'), ('BL', 'Bludgeoning'), ('CO', 'Cold'), ('FI', 'Fire'), ('FO', 'Force'), ('LI', 'Lightning'), ('NE', 'Necrotic'), ('PI', 'Piercing'), ('PO', 'Poison'), ('PS', 'Psychic'), ('RA', 'Radiant'), ('SL', 'Slashing'), ('TH', 'Thunder')], default='', max_length=2)),
                ('damage2_type_other', models.CharField(blank=True, default='', max_length=128)),
                ('higher_level_dice2', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('save_ability', models.CharField(choices=[('', 'None'), ('ST', 'Strength'), ('DE', 'Dexterity'), ('CO', 'Constitution'), ('IN', 'Intelligence'), ('WI', 'Wisdom'), ('CH', 'Charisma')], default='', max_length=2)),
                ('save_success', models.CharField(blank=True, max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ToolProficiency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32)),
                ('proficiency_bonus', models.PositiveSmallIntegerField(choices=[(1, 'Proficient'), (2, 'Expertise'), (3, 'Jack of All Trades')], default=1)),
                ('attribute', models.CharField(choices=[('', 'None'), ('ST', 'Strength'), ('DE', 'Dexterity'), ('CO', 'Constitution'), ('IN', 'Intelligence'), ('WI', 'Wisdom'), ('CH', 'Charisma')], default='ST', max_length=2)),
                ('modifier', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Trait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField(blank=True, default='')),
                ('recharge', models.CharField(default='', max_length=32)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='resources',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='dnd.Resource'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='senses',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Senses'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='skills',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Skills'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='speed',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dnd.Speed'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='spells',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Spell'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='tool_proficiencies',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='tool_proficiencies', to='dnd.ToolProficiency'),
        ),
        migrations.AddField(
            model_name='playercharacter',
            name='traits',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Trait'),
        ),
        migrations.AddField(
            model_name='monster',
            name='senses',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Senses'),
        ),
        migrations.AddField(
            model_name='monster',
            name='skills',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Skills'),
        ),
        migrations.AddField(
            model_name='monster',
            name='speed',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dnd.Speed'),
        ),
        migrations.AddField(
            model_name='monster',
            name='spells',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Spell'),
        ),
        migrations.AddField(
            model_name='monster',
            name='traits',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='dnd.Trait'),
        ),
    ]
