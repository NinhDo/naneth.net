# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/space
    docker:
      - image: circleci/python:3.6.1
      - image: circleci/postgres:9.5.12
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          environment:
            SECRET_KEY: $SECRET_KEY
            GITHUB_WEBHOOK_KEY: $GITHUB_WEBHOOK_KEY
            DB_NAME: 'circle_test'
            DB_USER: 'circleci'
            DB_PASS: ''
            DB_HOST: 'localhost'
            DEBUG: True
          command: |
            . venv/bin/activate
            sudo mkdir -p /var/scripts
            sudo touch /var/scripts/redeploy.sh
            sudo echo "#!/bin/sh\necho redeploying"
            sudo chmod +x /var/scripts/redeploy.sh
            /var/scripts/redeploy.sh
            make test

      - store_artifacts:
          path: test-reports
          destination: test-reports
